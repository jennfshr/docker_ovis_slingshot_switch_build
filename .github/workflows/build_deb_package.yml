name: Package OVIS-LDMS SlingShot Switch Sampler for Debian ARM64

on:
  push:
    branches: [ "debian" ]
  pull_request:
    branches: [ "debian" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-20.04
    env:      
      DOCKER_REGISTRY: docker.io
      DOCKER_IMAGE: jkgreen76/ldms-slingshot-sampler
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      GPGPASS: ${{ secrets.GPGPASS }}
      GPGUSER: ${{ secrets.GPGUSER }}
      GPGEMAIL: ${{ secrets.GPGEMAIL }}
      DOCKER_TARGET_PLATFORM: 'linux/arm64'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: 'linux/arm64'
        
    - name: Set up Docker Buildx      
      uses: docker/setup-buildx-action@v3    
      with:        
        version: latest  

    - name: Prepare
      if: success()
      id: prepare
      run: |
        echo "docker_image=${DOCKER_REGISTRY}/${DOCKER_IMAGE}" >> "$GITHUB_OUTPUT"
        echo "buildx_version=${GITHUB_RUN_NUMBER}" >> "$GITHUB_OUTPUT"
        echo "docker_platform=${DOCKER_TARGET_PLATFORM}" >> "$GITHUB_OUTPUT"
        echo "### Prepare Step Successful :white_check_mark:" >> $GITHUB_STEP_SUMMARY

    - name: Docker Login
      if: success()
      run: |
        echo "${DOCKER_PASSWORD}" | docker login ${DOCKER_REGISTRY} --username "${DOCKER_USERNAME}" --password-stdin
        echo "### Docker Login Successful :white_check_mark:" >> $GITHUB_STEP_SUMMARY

    - name: Build Debian Package
      if: success()
      run: |
        docker buildx build \
        --platform ${{ steps.prepare.outputs.docker_platform }} \
        --tag ${{ steps.prepare.outputs.docker_image }} \
        --provenance false \
        --sbom false \
        --file ./Dockerfile \
        --output "type=image,push=true" .
        echo "### ovis-ldms_4.4.3-1_arm.deb created! :white_check_mark:" >> $GITHUB_STEP_SUMMARY
 
    - name: Stage artifacts to bindmount
      if: success()
      run: |
        mkdir -p ldms-slingshot-sampler
        sudo chmod -R 777 $(pwd)/ldms-slingshot-sampler
        docker run -i \
        -v $(pwd)/ldms-slingshot-sampler:/ldms-slingshot-sampler:rw ${DOCKER_IMAGE} \
        cp -Rf /ovis-ldms-debian-package/* /ldms-slingshot-sampler/.
  
    - name: list directory contents of ldms-slingshot-sampler
      if: success()
      run: |
        ls -al ldms-slingshot-sampler
        
    - name: list directory contents of ldms-slingshot-sampler
      if: success()
      run: |
        ls -al ldms-slingshot-sampler
    - name: Create APT repo
      if: success()
      run: |
        mkdir -p ldms-slingshot-sampler/apt-repo/pool/main/
        cp ldms-slingshot-sampler/ovis-ldms_4.4.3-1_arm64.deb ldms-slingshot-sampler/apt-repo/pool/main/.     
        mkdir -p ldms-slingshot-sampler/apt-repo/dists/stable/main/binary-arm64
        cd ldms-slingshot-sampler/apt-repo
        dpkg-scanpackages --arch arm64 pool/ > dists/stable/main/binary-arm64/Packages
        cat dists/stable/main/binary-arm64/Packages | gzip -9 > dists/stable/main/binary-arm64/Packages.gz
        cat dists/stable/main/binary-arm64/Packages
< todo start from here >
    - name: 🔍 Check for dependencies
      run: command -v zstd || sudo apt install zstd
        
    - name: 📝 Create Packages
      run: apt-ftparchive packages ./debs > Packages
    
    - name: 📝 Create Packages.bz2 from Packages
      run: bzip2 -c9 Packages > Packages.bz2
    
    - name: 📝 Create Packages.xz from Packages
      run: xz -c9 Packages > Packages.xz
    
    - name: 📝 Create Packages.lzma from Packages
      run: xz -5fkev --format=lzma Packages > Packages.lzma
    
    - name: 📝 Create Packages.gz from Packages
      run: gzip -c9 Packages > Packages.gz
    
    - name: 📝 Create Packages.zstd from Packages
        run: zstd -c19 Packages > Packages.zst
    
    - name: Upload artifact
      if: success()
      uses: actions/upload-pages-artifact@v4
      with:
        name: ldms-slingshot-sampler
        path: ldms-slingshot-sampler
        
    - name: Artifact Upload
      if: success()
      run: |
        echo "### ovis-ldms_4.4.3-1_arm.deb artifact uploaded! :rocket:" >> $GITHUB_STEP_SUMMARY
